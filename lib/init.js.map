{"version":3,"sources":["../src/init.js"],"names":["init","handlePopState","url","store","dispatch","push","source","routes","aliases","window","onpopstate"],"mappings":";;;;kBASwBA,I;;AATxB;;AACA;;AACA;;AAEO,IAAMC,0CAAiB,SAAjBA,cAAiB;AAAA,SAAS,YAAM;AAC3C,QAAMC,MAAM,mBAAOC,KAAP,CAAZ;AACAA,UAAMC,QAAN,CAAe,uBAAS,EAACF,QAAD,EAAMG,MAAM,IAAZ,EAAkBC,QAAQ,UAA1B,EAAT,CAAf;AACD,GAH6B;AAAA,CAAvB;;AAKQ,SAASN,IAAT,CAAcG,KAAd,EAAqBI,MAArB,EAA6BC,OAA7B,EAAsC;AACnD,MAAMN,MAAM,mBAAOC,KAAP,CAAZ;;AAEA,+BAAgBI,MAAhB,EAAwBC,OAAxB;;AAEAL,QAAMC,QAAN,CAAe,uBAAS,EAACF,QAAD,EAAMI,QAAQ,MAAd,EAAT,CAAf;;AAEA,MAAI,OAAOG,MAAP,KAAkB,WAAtB,EAAmC;AACjCA,WAAOC,UAAP,GAAoBT,eAAeE,KAAf,CAApB;AACD;AACF","file":"init.js","sourcesContent":["import {configureRouter} from './router'\nimport {getUrl} from './utils'\nimport {navigate} from './actions'\n\nexport const handlePopState = store => () => {\n  const url = getUrl(store)\n  store.dispatch(navigate({url, push: true, source: 'popState'}))\n}\n\nexport default function init(store, routes, aliases) {\n  const url = getUrl(store)\n\n  configureRouter(routes, aliases)\n\n  store.dispatch(navigate({url, source: 'init'}))\n\n  if (typeof window !== 'undefined') {\n    window.onpopstate = handlePopState(store)\n  }\n}\n"]}